name: CI/CD Pipeline

on:
    push:
        branches:
            - main
            - master

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}

jobs:
    build:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write
        
        outputs:
            image-tag: ${{ steps.meta.outputs.tags }}
            image-digest: ${{ steps.build.outputs.digest }}
        
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Log in to Container Registry
              uses: docker/login-action@v3
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Extract metadata
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
                  tags: |
                      type=ref,event=branch
                      type=ref,event=pr
                      type=sha,prefix=sha-{{date 'YYYYMMDD'}}-
                      type=raw,value=latest,enable={{is_default_branch}}

            - name: Build and push Docker image
              id: build
              uses: docker/build-push-action@v5
              with:
                  context: .
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
                  platforms: linux/amd64,linux/arm64

    deploy:
        needs: build
        runs-on: ubuntu-latest
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        
        steps:
            - name: Deploy to server
              uses: appleboy/ssh-action@v1.0.3
              with:
                  host: ${{ secrets.SERVER_IP }}
                  username: ${{ secrets.SSH_USER }}
                  key: ${{ secrets.SSH_PRIVATE_KEY }}
                  script: |
                      # Login to GitHub Container Registry
                      echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
                      
                      # Pull the latest image
                      docker pull ${{ needs.build.outputs.image-tag }}
                      
                      # Stop and remove old container if exists
                      docker stop hookapedia-backend || true
                      docker rm hookapedia-backend || true
                      
                      # Run new container
                      docker run -d \
                          --name hookapedia-backend \
                          --restart unless-stopped \
                          -p 3000:3000 \
                          -e NODE_ENV=production \
                          -e DB_HOST=${{ secrets.DB_HOST }} \
                          -e DB_PORT=${{ secrets.DB_PORT }} \
                          -e DB_USERNAME=${{ secrets.DB_USERNAME }} \
                          -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
                          -e DB_NAME=${{ secrets.DB_NAME }} \
                          ${{ needs.build.outputs.image-tag }}
                      
                      # Clean up old images
                      docker image prune -f
                      
                      # Show running containers
                      docker ps
